<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lhh.community.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.lhh.community.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="accountId" jdbcType="VARCHAR" property="accountid" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="gmtCreate" jdbcType="BIGINT" property="gmtcreate" />
    <result column="gmtModified" jdbcType="BIGINT" property="gmtmodified" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, accountId, token, gmtCreate, gmtModified, avatar_url
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="findByToken" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where token = #{token,jdbcType=VARCHAR}
  </select>

  <select id="findByAccountId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where accountId = #{accountId,jdbcType=VARCHAR}
  </select>



  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lhh.community.entity.User">
    insert into user (id, name, accountId, 
      token, gmtCreate, gmtModified, 
      avatar_url)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{accountid,jdbcType=VARCHAR}, 
      #{token,jdbcType=VARCHAR}, #{gmtcreate,jdbcType=BIGINT}, #{gmtmodified,jdbcType=BIGINT}, 
      #{avatarUrl,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lhh.community.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="accountid != null">
        accountId,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="gmtcreate != null">
        gmtCreate,
      </if>
      <if test="gmtmodified != null">
        gmtModified,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="accountid != null">
        #{accountid,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="gmtcreate != null">
        #{gmtcreate,jdbcType=BIGINT},
      </if>
      <if test="gmtmodified != null">
        #{gmtmodified,jdbcType=BIGINT},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lhh.community.entity.User">
    update user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="accountid != null">
        accountId = #{accountid,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="gmtcreate != null">
        gmtCreate = #{gmtcreate,jdbcType=BIGINT},
      </if>
      <if test="gmtmodified != null">
        gmtModified = #{gmtmodified,jdbcType=BIGINT},
      </if>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lhh.community.entity.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      accountId = #{accountid,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      gmtCreate = #{gmtcreate,jdbcType=BIGINT},
      gmtModified = #{gmtmodified,jdbcType=BIGINT},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>