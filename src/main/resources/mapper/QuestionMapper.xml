<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lhh.community.dao.QuestionMapper">
  <resultMap id="BaseResultMap" type="com.lhh.community.entity.Question">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="gmt_create" jdbcType="BIGINT" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="BIGINT" property="gmtModified" />
    <result column="creator" jdbcType="BIGINT" property="creator" />
    <result column="comment_count" jdbcType="BIGINT" property="commentCount" />
    <result column="view_count" jdbcType="BIGINT" property="viewCount" />
    <result column="like_count" jdbcType="BIGINT" property="likeCount" />
    <result column="tag" jdbcType="VARCHAR" property="tag" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.lhh.community.entity.Question">

    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, gmt_create, gmt_modified, creator, comment_count, view_count, like_count, 
    tag
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from question
    where id = #{id,jdbcType=BIGINT}
  </select>


  <select id="selectAll"  resultMap="ResultMapWithBLOBs">
    select * from question
  </select>

  <select id="selectPage"  resultMap="ResultMapWithBLOBs">
    select * from question order by gmt_create desc limit #{offset,jdbcType=INTEGER},#{size,jdbcType=INTEGER}
  </select>

  <select id="selectPageByUserId"  resultMap="ResultMapWithBLOBs">
    select * from question where creator = #{userId,jdbcType=BIGINT} order by gmt_create desc limit #{offset,jdbcType=INTEGER},#{size,jdbcType=INTEGER}
  </select>


  <select id="count" resultType="java.lang.Integer">
    select count(1) from question
  </select>

  <select id="countByUserId" parameterType="java.lang.Long" resultType="java.lang.Integer">
    select count(1) from question where creator = #{userId,jdbcType=BIGINT}
  </select>



  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from question
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.lhh.community.entity.Question">
    insert into question (id, title, gmt_create, 
      gmt_modified, creator, comment_count, 
      view_count, like_count, tag, 
      description)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=BIGINT},
      #{gmtModified,jdbcType=BIGINT}, #{creator,jdbcType=BIGINT}, #{commentCount,jdbcType=BIGINT},
      #{viewCount,jdbcType=BIGINT}, #{likeCount,jdbcType=BIGINT}, #{tag,jdbcType=VARCHAR},
      #{description,jdbcType=LONGVARCHAR})
  </insert>

  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lhh.community.entity.Question">
    update question
    set title = #{title,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=BIGINT},
      gmt_modified = #{gmtModified,jdbcType=BIGINT},
      creator = #{creator,jdbcType=BIGINT},
      comment_count = #{commentCount,jdbcType=BIGINT},
      view_count = #{viewCount,jdbcType=BIGINT},
      like_count = #{likeCount,jdbcType=BIGINT},
      tag = #{tag,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lhh.community.entity.Question">
    update question
    set title = #{title,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=BIGINT},
      gmt_modified = #{gmtModified,jdbcType=BIGINT},
      creator = #{creator,jdbcType=BIGINT},
      comment_count = #{commentCount,jdbcType=BIGINT},
      view_count = #{viewCount,jdbcType=BIGINT},
      like_count = #{likeCount,jdbcType=BIGINT},
      tag = #{tag,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="incView" parameterType="com.lhh.community.entity.Question">
    update question
    set
    view_count =view_count + #{viewCount}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="incCommentCount" parameterType="com.lhh.community.entity.Question">
    update question
    set
    comment_count =comment_count + #{commentCount}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectRelated" parameterType="com.lhh.community.entity.Question" resultMap="ResultMapWithBLOBs">
    select * from question
    <where>
      <if test="id != null">
        and id != #{id,jdbcType=BIGINT}
      </if>
      <if test="tag != null and tag != ''">
        and tag regexp #{tag,jdbcType=VARCHAR}
      </if>
    </where>
    order by gmt_create desc limit 20
  </select>

</mapper>